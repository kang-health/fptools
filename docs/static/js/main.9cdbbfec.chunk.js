(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1:function(e){e.exports={type:"module",name:"ftools",doc:null,is_pkg:!0,members:[{type:"module",name:"ftools.callable",doc:"Utilities for callables",is_pkg:!1,members:[{type:"function",name:"constant",doc:"Creates a function that returns value.",signature:"(value: ~Value) -> Callable[..., ~Value]"},{type:"function",name:"curry",doc:"Creates a function that accepts arguments of func and either invokes func returning its result,\nif at least arity number of arguments have been provided, or returns a function that accepts\nthe remaining func arguments, and so on.",signature:"(_callable: Callable)"},{type:"class",name:"currymethod",doc:"Like curry but if the method was executed as a static method it will accept self as the last\nargument.",members:[]},{type:"function",name:"debounce",doc:"Creates a debounced function that delays invoking func until after wait\nmilliseconds have elapsed since the last time the debounced function was\ninvoked. The debounced function comes with a cancel method to cancel delayed\nfunc invocations and a flush method to immediately invoke them. Provide\noptions to indicate whether func should be invoked on the leading and/or\ntrailing edge of the wait timeout. The func is invoked with the last\narguments provided to the debounced function. Subsequent calls to the\ndebounced function return the result of the last func invocation.",signature:"(wait: Union[float, int], func: ~T, leading: bool = False, trailing: bool = True) -> ~T"},{type:"function",name:"deprecated",doc:"Warn when using wrapped func",signature:"(func: ~T) -> ~T"},{type:"function",name:"flow",doc:"Creates a function that returns the result of invoking the given functions where each\nsuccessive invocation is supplied the return value of the previous.",signature:"(funcs: Iterable[Callable], value)"},{type:"function",name:"fullname",doc:"Get full name of a function: the module it is declared in and it's name",signature:"(func: Callable) -> str"},{type:"function",name:"graceful",doc:"Creates a functions that returns the result of invoking the given function or None if\nit raised an exception.",signature:"(func: ~T, exception_type: Type[Exception] = <class 'Exception'>) -> ~T"},{type:"function",name:"identity",doc:"This function returns the first argument it receives.",signature:"(arg: ~T) -> ~T"},{type:"function",name:"noop",doc:"This method returns None",signature:"(*_, **__) -> None"},{type:"function",name:"once",doc:"Creates a callable that is restricted to be called once. Repeat calls to the\ncallable return the value of the first call.",signature:"(_callable: ~T) -> ~T"},{type:"function",name:"rename",doc:"Set a new name for a function",signature:"(new_name: str) -> Callable[[~T], ~T]"}],file:"/Users/iddan/ftools/ftools/callable.py"},{type:"module",name:"ftools.collection",doc:"Utilities for collection",is_pkg:!1,members:[{type:"function",name:"branches",doc:"Iterates each path and value pair of the collection and it's descendent collections",signature:"(collection: Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]) -> Generator[Tuple[Sequence[Union[Hashable, int]], Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]], ~V]], NoneType, NoneType]"},{type:"function",name:"delitem",doc:"Deletes given path from collection",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]], collection: Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]) -> Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]"},{type:"function",name:"getitem",doc:"Gets the value at path of collection",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]], collection: Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]) -> ~V"},{type:"function",name:"hasitem",doc:"Returns whether path exists in collection",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]], collection: Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]) -> bool"},{type:"function",name:"leaves",doc:"Like branches() but only yields non collection values",signature:"(collection: Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]) -> Generator[Tuple[Sequence[Union[Hashable, int]], ~V], NoneType, NoneType]"},{type:"function",name:"pick",doc:"Creates a collection composed of the picked paths.",signature:"(paths: Iterable[Union[Hashable, int, Sequence[Union[Hashable, int]]]], collection: Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]) -> Union[Mapping[Union[Hashable, int], Union[ForwardRef('Collection'), ~V]], Iterable[Union[ForwardRef('Collection'), ~V]]]"},{type:"function",name:"setitem",doc:"Sets the value at path of collection. If a portion of path doesn't exist, it's created.",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]], value: ~V, collection: Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]) -> Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]"},{type:"function",name:"to_path",doc:"Converts value to a property path tuple.",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]]) -> Sequence[Union[Hashable, int]]"},{type:"function",name:"update",doc:"This method is like set except that accepts updater to produce the value to set.",signature:"(path: Union[Hashable, int, Sequence[Union[Hashable, int]]], modifier: Callable[[~V], ~V], collection: Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]) -> Union[MutableMapping[~K, Union[ForwardRef('MutableCollection'), ~V]], MutableSequence[Union[ForwardRef('MutableCollection'), ~V]]]"}],file:"/Users/iddan/ftools/ftools/collection.py"},{type:"module",name:"ftools.iterable",doc:"Utilities for iterables",is_pkg:!1,members:[{type:"class",name:"FlatGroupBy",doc:"The iterable object returned by flat_group_by()",members:[]},{type:"function",name:"chunk",doc:"Creates an iterable of elements split into groups the length of size.\nIf iterable can't be split evenly, the final chunk will be the remaining elements.",signature:"(size: int, iterable: Iterable[~T]) -> Iterable[Tuple[~T, ...]]"},{type:"function",name:"chunk_by",doc:"Creates an iterable of chunks of iterable defined by the identity returned\nby given predicate function",signature:"(predicate: Callable[[~T, int], ~Identity], iterable: Iterable[~T]) -> Iterable[Tuple[~T, ...]]"},{type:"function",name:"compact",doc:"Creates an iterable with all falsey values removed.",signature:"(iterable: Iterable[~T]) -> Iterable[~T]"},{type:"function",name:"find",doc:"Iterates over elements of iterable, returning the first element predicate returns truthy for.\nDefaults to None.",signature:"(comparator: Callable[[~T], bool], iterable: Iterable[~T]) -> Union[~T, NoneType]"},{type:"function",name:"find_index",doc:"This method is like find() except that it returns the index of the first element predicate\nreturns truthy for instead of the element itself.",signature:"(comparator: Callable[[~T], bool], iterable: Iterable[~T]) -> Union[int, NoneType]"},{type:"function",name:"flat_group_by",doc:"Creates an iterable of tuples of group and item generated from the results\nof running each element of iterable thru iteratee. The order of grouped\nvalues is determined by the order they occur in iterable. The iteratee is\ninvoked with one argument: (value). Like group_by but returns an iterable of\ntuples of group and item. Resembles SQL's group_by().",signature:"(iteratee: Callable[[~T], ~G], iterable: Iterable[~T]) -> Iterable[Tuple[~G, ~T]]"},{type:"function",name:"flatten",doc:"Flattens iterable a single level deep.",signature:"(iterable: Iterable[Union[~T, Iterable[~T]]]) -> Iterable[~T]"},{type:"function",name:"group_by",doc:"Creates a dict composed of keys generated from the results of running each\nelement of iterable thru iteratee. The order of grouped values is determined\nby the order they occur in iterable. The corresponding value of each key is\na list of elements responsible for generating the key. The iteratee is\ninvoked with one argument: (value).",signature:"(iteratee: Callable[[~T], ~G], iterable: Iterable[~T]) -> Dict[~G, List[~T]]"},{type:"function",name:"head",doc:"Gets the first element of iterable.\nDefaults to None.",signature:"(iterable: Iterable[~T]) -> Union[~T, NoneType]"},{type:"function",name:"index_of",doc:"Returns index of item in given iterable. Like list.index() but for any iterable",signature:"(item: ~T, iterable: Iterable[~T]) -> Union[int, NoneType]"},{type:"function",name:"intersection",doc:"Creates an iterable of unique values that are included in given source and\ntarget iterables using hash() for comparisons. The order and references of\nresult values are determined by the first iterable.",signature:"(source: Iterable[~HashableItem], target: Iterable[~HashableItem]) -> Iterable[~HashableItem]"},{type:"function",name:"key_by",doc:"Creates a dictionary composed of keys generated from the results of running\neach element of iterable thru iteratee. The corresponding value of each key\nis the last element responsible for generating the key. The iteratee is\ninvoked with one argument: (value).",signature:"(iteratee: Callable[[~T], ~G], iterable: Iterable[~T]) -> Dict[~G, ~T]"},{type:"function",name:"mean",doc:"Computes the mean of the values in iterable.",signature:"(iterable: Iterable[~Number]) -> float"},{type:"function",name:"partition",doc:"Partition given iterable items to two iterables: of items matching the\npredicate function and items that do not.",signature:"(predicate: Callable[[~T], bool], iterable: Iterable[~T]) -> Tuple[Iterable[~T], Iterable[~T]]"},{type:"function",name:"starfilter",doc:"Make an iterator that computes the function using arguments obtained from\nthe iterable. Used instead of filter() when argument parameters are already\ngrouped in tuples from a single iterable (the data has been \u201cpre-zipped\u201d).\nThe difference between filter() and starfilter() parallels the distinction\nbetween function(a,b) and function(*c)",signature:"(function: Callable[[~T], bool], iterable: Iterable[Iterable[~T]]) -> Iterable[~T]"},{type:"function",name:"starreduce",doc:"Make an iterator that computes the function using arguments obtained from\nthe iterable. Used instead of reduce() when argument parameters are already\ngrouped in tuples from a single iterable (the data has been \u201cpre-zipped\u201d).\nThe difference between reduce() and starreduce() parallels the distinction\nbetween function(a,b) and function(*c)",signature:"(function: Callable[[~A, ~T], ~A], iterable: Iterable[Iterable[~T]], initial: ~A) -> ~A"},{type:"function",name:"uniq",doc:"Returns a duplicate-free version of an iterable, using hash for equality\ncomparisons, in which only the first occurrence of each element is kept.\nThe order of result values is determined by the order they occur in the\niterable.",signature:"(iterable: Iterable[~T]) -> Iterable[~T]"},{type:"function",name:"uniq_by",doc:"This function is like uniq except that it accepts iteratee which is invoked\nfor each element in array to generate the criterion by which uniqueness is\ncomputed. The order of result values is determined by the order they occur\nin the array. The iteratee is invoked with one argument: (value).",signature:"(key: Callable[[~T], ~Key], iterable: Iterable[~T]) -> Iterable[~T]"}],file:"/Users/iddan/ftools/ftools/iterable.py"},{type:"module",name:"ftools.mapping",doc:"Utilities for mappings",is_pkg:!1,members:[{type:"function",name:"create_empty",doc:"Create a new mapping of the type of given mapping",signature:"(mapping: ~M) -> ~M"},{type:"function",name:"extract",doc:"For given keys and aliases creates an extractor function that receives a\nmapping and returns a new mapping with the listed keys with their values\nin the mapping and values for keys listed in aliases under the parameter\nnames provided",signature:"(*keys: ~K, **aliases: ~K2)"},{type:"function",name:"is_dict",doc:"Matches if value is a dictionary",signature:"(value)"},{type:"class",name:"items",doc:"Mapping.items() for Mapping like objects that don't implement items()",members:[]},{type:"function",name:"map_keys",doc:"Creates a dictionary with the same values as _dict and keys generated by\napplying modifier(key) for each key.",signature:"(modifier: Callable[[~K], ~K2], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K2, ~V]"},{type:"function",name:"map_values",doc:"Creates a dictionary with the same keys as _dict and values generated by\napplying modifier(val) for each value.",signature:"(modifier: Callable[[~V], ~V2], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K, ~V2]"},{type:"function",name:"omit",doc:"Creates a mapping without the omitted mapping items.",signature:"(_items: Iterable[~K], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K, ~V]"},{type:"function",name:"pick",doc:"Creates a mapping composed of the picked mapping items.",signature:"(_items: Iterable[~K], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K, Union[~V, NoneType]]"},{type:"function",name:"pick_by_key",doc:"Creates a mapping composed of the picked mapping items.",signature:"(predicate: Callable[[~K], bool], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K, Union[~V, NoneType]]"},{type:"function",name:"pick_by_value",doc:"Creates a mapping composed of the picked mapping items.",signature:"(predicate: Callable[[~V], bool], mapping: MutableMapping[~K, ~V]) -> MutableMapping[~K, Union[~V, NoneType]]"}],file:"/Users/iddan/ftools/ftools/mapping.py"},{type:"module",name:"ftools.optional",doc:"Utilities for working with Optional[T]",is_pkg:!1,members:[{type:"function",name:"ignore_optional",doc:"Returns a new function only applied for non None value",signature:"(func: Callable[[~T], ~T2])"},{type:"function",name:"is_some",doc:"Returns whether a value is not None",signature:"(value: Union[~T, NoneType]) -> bool"},{type:"function",name:"map_optionals",doc:"Maps items of iterable with iteratee without affecting None items.",signature:"(iteratee: Callable[[~T], ~T2], iterable: Iterable[Union[~T, NoneType]]) -> Iterable[Union[~T2, NoneType]]"}],file:"/Users/iddan/ftools/ftools/optional.py"},{type:"module",name:"ftools.sequence",doc:"Utilities for sequences",is_pkg:!1,members:[{type:"function",name:"create_empty",doc:"Create a new sequence of the type of given sequence",signature:"(sequence: MutableSequence[~T]) -> MutableSequence[~T]"},{type:"function",name:"initial",doc:"Gets all but the last element of sequence.",signature:"(sequence: Sequence[~T]) -> Sequence[~T]"},{type:"function",name:"last",doc:"Gets the last element of sequence.",signature:"(sequence: Sequence[~T]) -> Union[~T, NoneType]"},{type:"function",name:"omit",doc:"The opposite of pick; this method creates a sequence composed of the items that are not omitted.",signature:"(items: Iterable[int], sequence: MutableSequence[~T]) -> MutableSequence[~T]"},{type:"function",name:"pick",doc:"Creates a sequence composed of the picked sequence items.",signature:"(items: Iterable[int], sequence: MutableSequence[~T]) -> MutableSequence[~T]"}],file:"/Users/iddan/ftools/ftools/sequence.py"}],file:"/Users/iddan/ftools/ftools/__init__.py"}},11:function(e,n,t){e.exports=t(19)},17:function(e,n,t){},18:function(e,n,t){},19:function(e,n,t){"use strict";t.r(n);var a=t(0),i=t.n(a),o=t(3),l=t.n(o),r=(t(17),t(4)),s=t(5),c=t(8),u=t(6),p=t(9),m=t(7),d=t(10),f=t(1),b=(t(18),function e(n){var t=n.module,a=n.members,o=n.filter;return i.a.createElement("ul",null,a.map(function(n){if(o&&!n.members&&!n.name.includes(o))return null;var a=o&&n.name.includes(o)?n.name.split(o).map(function(e,n,t){return n<t.length-1?[e,i.a.createElement("b",{key:n},o)]:e}):n.name,l=n.members?"h5":"span";return i.a.createElement("li",{key:n.name},i.a.createElement(l,null,i.a.createElement("a",{href:"#"+g(Object(d.a)({},n,{module:t}))},a)),n.members&&i.a.createElement(e,{module:n.name,members:n.members,filter:n.name.includes(o)?"":o}))}))}),h=function(e){var n=e.docs,t=Object(a.useState)(""),o=Object(m.a)(t,2),l=o[0],r=o[1];return i.a.createElement("nav",null,i.a.createElement("h3",null,n.name),i.a.createElement("input",{type:"search",value:l,onChange:function(e){return r(e.target.value)}}),i.a.createElement(b,{members:n.members,filter:l}))},g=function(e){var n=e.name,t=e.module,a=e.type;return"module"===a?n:t+"."+n+("function"===a?"()":"")},y=function e(n){var t=n.module,a=n.name,o=n.type,l=n.doc,r=n.signature,s=(n.is_pkg,n.members),c=g({name:a,module:t,type:o});return i.a.createElement("div",{className:"item "+o},i.a.createElement("a",{id:c,href:"#"+c},"module"===o?i.a.createElement("h4",null,a):i.a.createElement("pre",null,r?i.a.createElement(i.a.Fragment,null,t&&t+".",i.a.createElement("b",null,a),r):i.a.createElement(i.a.Fragment,null,t&&t+".",i.a.createElement("b",null,a)))),l&&i.a.createElement("p",null,l),s&&s.map(function(n){return i.a.createElement(e,Object.assign({key:n.name,module:a},n))}))},T=function(e){function n(){return Object(r.a)(this,n),Object(c.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(p.a)(n,e),Object(s.a)(n,[{key:"render",value:function(){return i.a.createElement("div",{className:"App"},i.a.createElement(h,{docs:f}),i.a.createElement("main",null,f.members.map(function(e){return i.a.createElement(y,Object.assign({key:e.name},e))})))}}]),n}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(i.a.createElement(T,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);
//# sourceMappingURL=main.9cdbbfec.chunk.js.map